
## 2.3.2 Effectful

Here is an example of a nontrivial IPVM job which reads from DNS, performs several jobs on the value, and atomically performs a DNS update with the output value.

``` json
{
  "type": "ipvm/job",
  "version": "0.1.0",
  "requestor": "did:key:zAlice",
  "nonce": "xjd72gs_k",
  "run": { <!-- alternate: run: { "ipvm/effects": {}, "ipvm/wasm": {}, "ipvm/exception": {} } -->
    "read-dns": {
      "type": "ipvm/effect",
      "with": "dns://_dnslink.example.com?TYPE=TXT",
      "do": "crud/read"
    },
    "check-dns": {
      "type": "ipvm/effect",
      "with": "dns://_dnslink.example.com?TYPE=TXT",
      "do": "crud/read"
      "inputs": [
        { "_": { "from": "end" } }
      ]
    },
    "write-dns": {
      "type": "ipvm/effect",
      "with": "dns://_dnslink.example.com?TYPE=TXT",
      "do": "crud/update",
      "inputs": [
        { "value": { "from": "end" } }
        { "_":     { "from": "cas" } }
      ],
      <!-- "await": [ "cas" ] ? -->
    }
    "left": {
      "type": "ipvm/wasm", // or make this a label for the microkernel?
      "kernel: "Qm12345", // Or here?
      "with": leftWasm,
      "inputs": [
        { "w": "Qm123456" },
        { "x": "Qmabcdef" },
        { "y": { "from": "read-dns" } }
        { "z": "QmFooBar" },
      ],
      "outputs": ["a", "b"] <!-- FIXME component model instead? -->
    },
    "right": {
      "type": "ipvm/wasm",
      "with": "rightWasm",
      "inputs": [
        { "foo": { "from": "read-dns/out" } },
        { "bar": "bafy123" }
      ],
      "outputs": ["a", "b"]
    },
    "end": {
      "type": "ipvm/wasm",
      "with": "QmEndWasm",
      "inputs": [
        { "a": { "from": "left" } },
        { "b": { "from": "right" } },
        { "c": 123 }
      ]
    },
    "cas": {
      "type": "ipvm/wasm",
      "with": "cafyCasWasm",
      "inputs": [
        { "initial": "read-dns" },
        { "latest": "check-dns" }
      ]
    }
  },
  "exception": {
      "format-message": {
        type: "ipvm/wasm",
        with: handlerWasm
      }
  },
  "signature": "abcdef"
}
```
